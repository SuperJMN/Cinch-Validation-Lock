<UserControl x:Class="ComplexValidation.Configuration.View.FieldDetailsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:s="clr-namespace:ComplexValidation.Configuration.View.Supporters"
             xmlns:viewModel="clr-namespace:ComplexValidation.Configuration.ViewModel"
             xmlns:model="clr-namespace:ComplexValidation.Configuration.Model"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance viewModel:FieldViewModel}"
             Grid.IsSharedSizeScope="True"
             d:DesignHeight="357.321" d:DesignWidth="504.715">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ComplexValidation;component/Themes/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <ObjectDataProvider MethodName="GetValues"
                ObjectType="{x:Type sys:Enum}" x:Key="FieldTypes">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="model:FieldType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            
            <s:ValueConverterGroup x:Key="EnumValueCapitalizeConverter">
                <s:ValueConverterGroup.Converters>
                    <s:EnumDescriptionConverter />
                    <s:CapitalizationConverter />
                </s:ValueConverterGroup.Converters>
            </s:ValueConverterGroup>
            
            

        </ResourceDictionary>
    </UserControl.Resources>
    <!--<i:Interaction.Behaviors>
        <supporters:LockBehavior IsLocked="{Binding IsDirty}" ScapeAttemptCommand="{Binding ScapeAttemptCommand}" />
    </i:Interaction.Behaviors>-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel>
            <s:TupleLayout>
                <s:TupleLayout.LeftSide>
                    <TextBlock Text="Nombre" />
                </s:TupleLayout.LeftSide>
                <s:TupleLayout.RightSide>
                    <TextBox
                        Text="{Binding Name.DataValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />
                </s:TupleLayout.RightSide>
            </s:TupleLayout>
            <s:TupleLayout>
                <s:TupleLayout.LeftSide>
                    <TextBlock Text="Descripción" />
                </s:TupleLayout.LeftSide>
                <s:TupleLayout.RightSide>
                    <TextBox
                        Text="{Binding Description.DataValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />
                </s:TupleLayout.RightSide>
            </s:TupleLayout>
            <s:TupleLayout>
                <s:TupleLayout.RightSide>
                    <UniformGrid Rows="1">
                        <CheckBox Content="Activo" IsChecked="{Binding IsActive.DataValue, Mode=TwoWay}">
                            <CheckBox.LayoutTransform>
                                <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                            </CheckBox.LayoutTransform>
                        </CheckBox>
                        <CheckBox Content="Obligatorio" IsChecked="{Binding IsRequired.DataValue, Mode=TwoWay}">
                            <CheckBox.LayoutTransform>
                                <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                            </CheckBox.LayoutTransform>
                        </CheckBox>
                    </UniformGrid>
                </s:TupleLayout.RightSide>
            </s:TupleLayout>
            <s:TupleLayout>
                <s:TupleLayout.LeftSide>
                    <TextBlock Text="Tipo de campo" />
                </s:TupleLayout.LeftSide>
                <s:TupleLayout.RightSide>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ComboBox ItemsSource="{Binding Source={StaticResource FieldTypes}}"
                                  SelectedValue="{Binding SelectedFieldType.DataValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource EnumValueCapitalizeConverter}}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <UniformGrid Rows="1" Grid.Column="1" Margin="5,0,0,0">
                            <UniformGrid.Style>
                                <Style TargetType="FrameworkElement">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedFieldType.DataValue}">
                                            <DataTrigger.Value>
                                                <model:FieldType>Numeric</model:FieldType>
                                            </DataTrigger.Value>
                                            <DataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </UniformGrid.Style>
                            <DockPanel>
                                <TextBlock Text="Mín." VerticalAlignment="Center" />
                                <TextBox Margin="8,0,0,0"
                                         MinWidth="50"
                                         Text="{Binding Min.DataValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, TargetNullValue=''}" />
                            </DockPanel>
                            <DockPanel>
                                <TextBlock Text="Máx." VerticalAlignment="Center" />
                                <TextBox Margin="8,0,0,0" MinWidth="50"
                                         Text="{Binding Max.DataValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, TargetNullValue=''}" />
                            </DockPanel>
                        </UniformGrid>
                    </Grid>
                </s:TupleLayout.RightSide>
            </s:TupleLayout>
            <s:TupleLayout>
                <s:TupleLayout.LeftSide>
                    <TextBlock Text="Máscara" />
                </s:TupleLayout.LeftSide>
                <s:TupleLayout.RightSide>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox
                            Text="{Binding Mask.DataValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />

                    </Grid>
                </s:TupleLayout.RightSide>
            </s:TupleLayout>
            <s:TupleLayout>
                <s:TupleLayout.LeftSide>
                    <TextBlock Text="Valor fijo" />
                </s:TupleLayout.LeftSide>
                <s:TupleLayout.RightSide>
                    <TextBox
                        Text="{Binding FixedValue.DataValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />
                </s:TupleLayout.RightSide>
            </s:TupleLayout>
            <s:TupleLayout>
                <s:TupleLayout.LeftSide>
                    <TextBlock Text="Carac. Válidos" />
                </s:TupleLayout.LeftSide>
                <s:TupleLayout.RightSide>
                    <TextBox
                        Text="{Binding ValidChars.DataValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />
                </s:TupleLayout.RightSide>
            </s:TupleLayout>
            <s:TupleLayout>
                <s:TupleLayout.LeftSide>
                    <TextBlock Text="Orientación de campo" TextWrapping="Wrap" />
                </s:TupleLayout.LeftSide>
                <s:TupleLayout.RightSide>
                    <ComboBox ItemsSource="{Binding Angles}" SelectedItem="{Binding SelectedAngle.DataValue}" />
                </s:TupleLayout.RightSide>
            </s:TupleLayout>
        </StackPanel>
        <StackPanel Grid.Row="1" Visibility="Collapsed">
            <UniformGrid Rows="1" s:Children.Margin="{StaticResource SmallHorizontalThickness}"
                         Margin="{StaticResource NormalVerticalThickness}">
                <Button Content="Restablecer" Command="{Binding CancelEditCommand}"
                        Style="{StaticResource PinkButtonStyle}"
                        Width="{StaticResource StandarButtonWidth}"
                        />
            </UniformGrid>
        </StackPanel>
    </Grid>


</UserControl>